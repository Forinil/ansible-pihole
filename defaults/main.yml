---

pihole_default:
  repo:
    remote: "https://github.com/pi-hole/pi-hole.git"
    # use "version: latest" to get the latest *release*, or specify a version
    # to install, e.g., "version: 'v5.17.3'"
    version: "latest"
    # I don't like using /tmp because it requires running git as root
    # most suitable "tmp"-like path under user's HOME is ~/.cache/ I guess
    path: "{{ ansible_env.HOME }}/.cache/pi-hole"
    gh_slug: "pi-hole/pi-hole"
  user: pihole
  group: pihole
  path:
    # you should probably not change the config path
    config: /etc/pihole
    bin: /usr/local/bin
    # is there a better name than "scripts" for this path?
    scripts: /opt/pihole
    web_interface: /var/www/html/admin
    web_directory: /var/www/html/pihole
    dnsmasq: /etc/dnsmasq.d

  # see ./templates/setupVars.conf.j2 for settings and their descriptions
  setupVars:
    webpassword: "somelongandsecretstringofyourown"
    dns_servers:
      - "1.1.1.1"
      - "8.8.8.8"

  # https://docs.pi-hole.net/ftldns/configfile
  # see ./templates/pihole-FTL.conf.j2 for settings and their descriptions
  ftlconfig:
    maxdbdays: "365"
    privacylevel: "1"
    mozilla_canary: "true"

  dnsmasq:
    # maximum number of concurrent DNS queries, 150 by default
    # https://discourse.pi-hole.net/t/resolved-maximum-number-of-concurrent-dns-queries-reached/60970
    # https://discourse.pi-hole.net/t/maximum-number-of-concurrent-dns-queries-reached/51804
    dns_forward_max: 150

  # the desktop launcher is meant to be installed on your own workstation, not on
  # the server running Pi-Hole (see logic inside, but please note it requires you
  # to put this role in both your "workstation" as well as "server" playbook)
  desktop_launcher:
    enabled: false
    # if desktop_launcher is enabled, please replace with your Pi-Hole's IPv4 address
    ipv4: 192.168.1.2

# For public roles, keep this value as-is (to allow everyone other than me to run this role as-is)
# For solarchemist's own environment, this var is overriden in group_vars or playbook
# This is used in logic using hostnames specific to my environment, to skip those evaluations
# (that would otherwise break role execution for other users)
host_restrictions: false

# set pihole_testing to true to enable debug messages
# easiest via --extra-vars "{pihole_testing: true}"
# WARNING, enabling this will print the password on-screen and in the log
# during the 'Inspect "pihole" variable' task
pihole_testing: false

# meant for debugging use
# --extra-vars "{pihole_force_install: true}"
pihole_force_install: false
